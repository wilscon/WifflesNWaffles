@{
    ViewData["Title"] = "Home";
}




<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

<div class="grid-x" style="margin-top: 40px; ">
    <div class="cell small-offset-1 small-10 medium-offset-5 medium-2 large-offset-3 large-6" style="color: white; display: flex; justify-content: center; align-items: center;  font-family: monospace; font-size: 25px; cursor: pointer; text-align:center;">

        2nd "Sometimes" Annual Wiffles N' Waffles
    </div>

</div>


<div id="wiffle-container" style="display: flex; justify-content: center; align-items: center;">

</div>


<script>
    // Set up scene, camera, and renderer
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth * .75, window.innerHeight * .75);
    //document.body.appendChild(renderer.domElement);
    const container = document.getElementById('wiffle-container');
    container.appendChild(renderer.domElement);

    // Create the wiffle ball (sphere)
    const geometry = new THREE.SphereGeometry(1, 32, 32);
    const material = new THREE.MeshStandardMaterial({ color: 0xff4d4d });
    const ball = new THREE.Mesh(geometry, material);
    scene.add(ball);

    // Function to create holes (small spheres that cut out from the ball)
    const createHole = (x, y, z) => {
        const holeGeometry = new THREE.SphereGeometry(0.2, 32, 32);
        const holeMaterial = new THREE.MeshBasicMaterial({ color: 0x000000 });
        const hole = new THREE.Mesh(holeGeometry, holeMaterial);
        hole.position.set(x, y, z);
        ball.add(hole); // Add the hole to the ball
    };

    // Generate 23 evenly spaced points using spherical coordinates
    const holePositions = [];
    const numHoles = 23;  // Set the total number of holes to 23

    for (let i = 0; i < numHoles; i++) {
        const phi = Math.acos(1 - 2 * (i + 0.5) / numHoles);  // Latitude angle
        const theta = Math.PI * (1 + Math.sqrt(5)) * i;       // Longitude angle (golden angle approximation)
        const x = Math.sin(phi) * Math.cos(theta);
        const y = Math.sin(phi) * Math.sin(theta);
        const z = Math.cos(phi);
        holePositions.push([x, y, z]);
    }

    // Loop through hole positions and create the holes
    holePositions.forEach(pos => createHole(pos[0], pos[1], pos[2]));

    // Add lighting
    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
    scene.add(ambientLight);

    const pointLight = new THREE.PointLight(0xffffff, 1);
    pointLight.position.set(5, 5, 5);
    scene.add(pointLight);

    // Set camera position
    camera.position.z = 3;

    // Create animation loop to rotate the ball
    const animate = function () {
        requestAnimationFrame(animate);

        // Rotate the ball around its axes
        ball.rotation.x += 0.01;
        ball.rotation.y += 0.01;

        renderer.render(scene, camera);
    };

    // Start the animation
    animate();

    // Handle resizing the canvas
    window.addEventListener('resize', () => {
        renderer.setSize(window.innerWidth * .75, window.innerHeight * .75);
        camera.aspect = (window.innerWidth * .75) / (window.innerHeight * .75);
        camera.updateProjectionMatrix();
    });
</script>






<div class="grid-x" style="position: absolute; bottom: 50px; left:0; right: 0; margin:auto; height: 60px;">
    <div class="cell small-offset-1 small-10 medium-offset-5 medium-2 large-offset-5 large-2" data-selector="eventDetailsButton" style="background-color:#ff4d4d; display: flex; justify-content: center; align-items: center;  font-family: monospace; font-size: 25px; cursor: pointer">
         Event Details

  </div>

</div>


  

